//working directory for temporary/intermediate files produced in the workflow processes
workDir = "$HOME/temp"

//global parameters
params {
    // general options
    sample_sheet                = "test_data/paired_end_sample_sheet.csv"
    assoc                       = 'rsc'    

    // Input and output options
    download_sra_fqs            = false
    outdir                      = "./paired_end_results/"
    publish_dir_mode            = 'copy'

    // STAR specific params
    index                       = '/data/hps/assoc/public/bioinformatics/annotations/Homo_sapiens/Ensembl/GRCh38/Sequence/STAR'
    build_index                 = false
    
    //This path uses a symlink, so if there are issues try a direct path 
    gtf                         = '/data/hps/assoc/public/bioinformatics/annotations/Homo_sapiens/Ensembl/GRCh38/Annotation/Genes.ensembl' // required
    fasta                       = '/data/hps/assoc/public/bioinformatics/annotations/Homo_sapiens/Ensembl/GRCh38/Sequence/WholeGenomeFasta/Homo_sapiens.GRCh38.dna.primary_assembly.fa' // required
    star_ignore_sjdbgtf         = false
    seq_platform                = ''
    seq_center                  = ''

    // trimgalore specific parameters
    trim                        = false

    // RSEQC specific parameters - NEED TO FIND THIS 
    //rRNA_transcripts            = '/gpfs/shared_data/rseqc/hg38/GRCh38_rRNA_transcripts.txt'
    //make a resources folder!! 
    rRNA_transcripts              = './resources/GRCh38_rRNA_transcripts.txt'

    // fasterq-dump params
    user_settings               = './ncbi-user-settings.mkfg'

    //MultiQC params
    multiqc_config              = ''
    extra_multiqc_config        = ''
    multiqc_logo                = ''
}

// Computational resource allocation for the processes run in the workflow
process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    errorStrategy = "retry"
    maxRetries = 2

    //STAR-aligner process specific parameters
    //https://www.nextflow.io/docs/latest/process.html#dynamic-computing-resources
    withName: STAR_ALIGN {
        cpus = { 4 * task.attempt }
        memory = { 32.GB * task.attempt }
        ext.args = '--quantMode GeneCounts --outSAMtype BAM SortedByCoordinate --readFilesCommand "gunzip -c" --twopassMode Basic --twopass1readsN -1 --outSAMattributes NH HI NM MD AS nM jM jI XS'
    }

    withName: PICARD_MARKDUPLICATES {
        cpus = { 2 * task.attempt }
        memory = { 16.GB * task.attempt }
        ext.args = ''
    }

    //STAR index process specific parameters
    withName: STAR_GENOMEGENERATE {
        cpus = { 8 * task.attempt }
        memory = { 64.GB * task.attempt }
        ext.args = ''
    }

    //Trimgalore process specific parameters
    withName: TRIMGALORE {
        cpus = { 2 * task.attempt }
        memory = { 8.GB * task.attempt }
        ext.args = ''
    }

    //FastQC process specific parameters
    withName: FASTQC {
        cpus = 1
        memory = 8.GB
        ext.args = '--quiet'
    }

    //RSEQC process params
    withLabel: RSEQC {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        ext.args = ''
    }

    //RSEQC process params
    withName: RSEQC_TIN {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        ext.args = ''
    }

    //RSEQC reference files params
    withName: UCSC_GTFTOGENEPRED {
        cpus = { 1 * task.attempt }
        memory = { 8.GB * task.attempt }
        ext.args = "-ignoreGroupsWithoutExons -geneNameAsName2 -genePredExt"
    }

    //MULTIQC process specific parameters
    withName: MULTIQC {
        cpus = 1
        memory = 8.GB
        ext.args = '--export --data-dir --verbose'
    }

    //SRA process specific parameters
    withName: SRATOOLS_FASTERQDUMP {
        cpus = { 2 * task.attempt }
        memory = { 16.GB * task.attempt }
        ext.args = '--verbose'
        ext.args2 = '--verbose'
    }
}

//Create profiles to easily switch between the different process executors and platforms.
profiles {

        // For Sasquatch
    sasquatch_apptainer {
        process.executor = 'slurm'
        process.queue = 'cpu-core-sponsored'
        process.clusterOptions = "--account cpu-${params.assoc}-sponsored --time=72:00:00"
        apptainer.enabled = true
    }

    singularity {
        autoMounts = true
        cacheDir = "$HOME/singularity"
        runOptions = '--containall --no-home'
    }

    apptainer {
        autoMounts = true
        cacheDir = "$HOME/apptainer"
        runOptions = '--containall --no-home'
    }


}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
// https://github.com/nf-core/tools/blob/master/nf_core/pipeline-template/nextflow.config
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

//Configs for singularity containers on cybertron
singularity {
    autoMounts = true
    cacheDir = "$HOME/singularity"
    runOptions = '--containall --no-home'
}

apptainer {
    autoMounts = true
    cacheDir = "$HOME/apptainer"
    runOptions = '--containall --no-home'
}

//Use personal conda environments on cybertron
conda {
    cacheDir = "$HOME/miniconda3/envs/"
}

//overwrite reports when the workflow is executed again
report {
    overwrite = true
}
dag {
    overwrite = true
}
